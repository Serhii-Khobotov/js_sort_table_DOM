{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCEA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAGrC,AAFgB,EAAM,gBAAgB,CAAC,MAE/B,OAAO,CAAC,SAAC,CAAA,CAAQ,CAAzB,EACE,EAAO,gBAAgB,CAAC,QAAS,WAC/B,EAAa,EACf,EACF,GAEA,IAAM,EAAe,SAAC,CAAtB,EACE,IAAM,EAAQ,EAAM,aAAa,CAAC,SAG5B,EAAa,AAFL,EAAG,EAAM,gBAAgB,CAAC,OAEhB,IAAI,CAAC,SAAC,CAAA,CAAG,CAAjC,EACE,IAAM,EAAS,EAAE,KAAK,CAAC,EAAY,CAAC,WAAW,CAAC,IAAI,GAC9C,EAAS,EAAE,KAAK,CAAC,EAAY,CAAC,WAAW,CAAC,IAAI,SAEpD,AAAI,CAAC,EACI,CAAC,EAAS,EAGf,AAAgB,IAAhB,EAIK,AAHS,WAAW,EAAO,OAAO,CAAC,QAAS,KACnC,WAAW,EAAO,OAAO,CAAC,QAAS,KAK9C,EAAO,aAAa,CAAC,EAC9B,EAEA,CAAA,EAAM,SAAS,CAAG,GAClB,AAAA,EAAM,MAAM,CAAZ,KAAA,CAAA,EAAa,EAAG,GAClB","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar table = document.querySelector(\"table\");\nvar headers = table.querySelectorAll(\"th\");\nheaders.forEach(function(header, index) {\n    header.addEventListener(\"click\", function() {\n        setSortTable(index);\n    });\n});\nvar setSortTable = function(columnIndex) {\n    var _tBody;\n    var tBody = table.querySelector(\"tbody\");\n    var rows = _to_consumable_array(tBody.querySelectorAll(\"tr\"));\n    var sortedRows = rows.sort(function(a, b) {\n        var aValue = a.cells[columnIndex].textContent.trim();\n        var bValue = b.cells[columnIndex].textContent.trim();\n        if (+aValue) return +aValue - bValue;\n        if (columnIndex === 3) {\n            var aSalary = parseFloat(aValue.replace(/[$,]/g, \"\"));\n            var bSalary = parseFloat(bValue.replace(/[$,]/g, \"\"));\n            return aSalary - bSalary;\n        }\n        return aValue.localeCompare(bValue);\n    });\n    tBody.innerHTML = \"\";\n    (_tBody = tBody).append.apply(_tBody, _to_consumable_array(sortedRows));\n};\n\n//# sourceMappingURL=index.9438a74d.js.map\n","'use strict';\n\nconst table = document.querySelector('table');\nconst headers = table.querySelectorAll('th');\n\nheaders.forEach((header, index) => {\n  header.addEventListener('click', () => {\n    setSortTable(index);\n  });\n});\n\nconst setSortTable = (columnIndex) => {\n  const tBody = table.querySelector('tbody');\n  const rows = [...tBody.querySelectorAll('tr')];\n\n  const sortedRows = rows.sort((a, b) => {\n    const aValue = a.cells[columnIndex].textContent.trim();\n    const bValue = b.cells[columnIndex].textContent.trim();\n\n    if (+aValue) {\n      return +aValue - bValue;\n    }\n\n    if (columnIndex === 3) {\n      const aSalary = parseFloat(aValue.replace(/[$,]/g, ''));\n      const bSalary = parseFloat(bValue.replace(/[$,]/g, ''));\n\n      return aSalary - bSalary;\n    }\n\n    return aValue.localeCompare(bValue);\n  });\n\n  tBody.innerHTML = '';\n  tBody.append(...sortedRows);\n};\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","table","document","querySelector","headers","querySelectorAll","forEach","header","index","addEventListener","setSortTable","columnIndex","tBody","sortedRows","rows","sort","a","b","aValue","cells","textContent","trim","bValue","aSalary","parseFloat","replace","localeCompare","innerHTML","append","apply"],"version":3,"file":"index.9438a74d.js.map"}